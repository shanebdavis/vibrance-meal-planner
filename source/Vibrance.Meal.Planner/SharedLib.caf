import &ArtStandardLib

multipleStrings =
  2:  ""
  3:  :rd
  32: :nd
  64: :rth

withinOnePercent = (v1, v2) ->
  v1 < v2 + .01
  && v1 > v2 - .01

humanNumberWithFractions: (n, places = 2) ->
  if !withinOnePercent n, round n
    find multiple in [] 2 3 4 5 6 7 8 9 10 16 32 64
      if withinOnePercent n * multiple, round n * multiple
        out = ""
        if n > 1
          out += "#{n | 0} & "
        out + "#{round (n - (n | 0)) * multiple}/#{multiple}#{multipleStrings[multiple] ? 'th'}"
    ?
      if n < 1
        n * 100 | 0
        + "%"
      else
        n.toFixed places
  else
    n | 0
