import &StandardImport

class RecipePlan extends FluxComponent
  @subscriptions :recipe

  @stateFields
    showDetails: false

  render: ->
    {servings} = @props

    if @recipe
      {ingredients} = @recipe
      scaler = servings / @recipe.servings

    Element
      :column :parentWidthChildrenHeight
      padding:5
      animators:
        size: toFrom: ww:1, h:0
        clip: toFrom: true

      draw:
        padding: h: ViewLayout.gridSize
        rectangle: (ps) ->
          rect 0, ps.y, ps.x, 1
        fill: TextPalette.black.barely

      @recipe && Element
        :row :childrenCenterLeft :parentWidthChildrenHeight

        &IconButton
          icon: :triangleRight
          iconAngle: if @showDetails then Math.PI / 2 else 0
          action: @toggleShowDetails

        &Selectable
          text: @recipe.title
          action: @toggleShowDetails

        TextElement
          TextStyles.mediumText
          :parentHeightChildrenWidth
          :textCenterCenter
          padding: h: ViewLayout.gridSize
          text: servings # pluralize servings, "serving"

        &IconButton
          icon: :minus
          backgroundRadius: 4
          narrow: true
          action: -> @models.recipePlan.update @props.id, servings: servings - 1

        &IconButton
          icon: :plus
          backgroundRadius: 4
          narrow: true
          action: -> @models.recipePlan.update @props.id, servings: servings + 1

        &IconButton
          icon: :trash
          action: -> @models.mealPlan.removeRecipePlan @props.mealPlanId, @props.id

      @recipe && @showDetails && Element
        :column :parentWidthChildrenHeight
        animators: size: toFrom: ww: 1 h: 0
        clip: true
        array ingredient in ingredients
          &Ingredient ingredient, {scaler}

class RecipePlanWrapper extends FluxComponent
  @subscriptions "recipePlan"

  render: ->
    RecipePlan @recipePlan, @props
