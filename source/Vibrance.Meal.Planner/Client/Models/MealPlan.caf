import &StandardImport

class MealPlan extends ApplicationStateDb

  @fields
    name: :trimmedString
    recipePlanIds:
      fieldType: :array
      default: []

  getShoppingList: (mealPlanId) ->
    if mealPlan = @state[mealPlanId]
      {recipePlanIds} = mealPlan
      shoppingList = {}
      recipePlans = each recipePlanId in recipePlanIds when recipePlan = @models.recipePlan.state[recipePlanId]
        {peopleCount} = recipePlan
        if recipe = @models.recipe.state[recipePlan.recipeId]
          scaleFactor = peopleCount / recipe.peopleCount
          {ingredients} = recipe
          each {quanitity, unit, type} in ingredients
            key = "#{unit} #{type}"
            if shoppingList[key]
              shoppingList[key].quanitity += quanitity
            else
              shoppingList[key] = {quanitity, unit, type}
      shoppingList

  addRecipePlan: (mealPlanId, recipePlanProps) ->
    @models.recipePlan.create recipePlanProps
    .then (recipePlan) ->
      @update mealPlanId,
        recipePlanIds: compactFlatten [] @state[mealPlanId].recipePlanIds, recipePlan.id

  removeRecipePlan: (mealPlanId, recipePlanId) ->
    log removeRecipePlan1: {mealPlanId, recipePlanId}
    if mealPlan = @state[mealPlanId]
      log removeRecipePlan2: {mealPlan}
      {recipePlanIds} = mealPlan
      if 0 <= index = recipePlanIds.indexOf recipePlanId
        log removeRecipePlan3: {index}
        @models.recipePlan.delete recipePlanId
        .then ->
          @update mealPlanId, recipePlanIds: arrayWithout recipePlanIds, index
